// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id             String   @id @default(uuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  name           String?
  email          String   @unique
  hashedPassword String?
  role           Role     @default(USER)
  companyName    String?

  tokens         Token[]
  sessions       Session[]
  walletAccounts WalletAccount[]
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model WalletAccount {
  id           String        @id @default(uuid())
  accessToken  String
  bankId       Int?
  bank         Institution?  @relation(fields: [bankId], references: [id])
  user         User          @relation(fields: [userId], references: [id])
  userId       String
  identifier   String        @unique
  transactions Transaction[]
}

model Transaction {
  id        String          @id @default(uuid())
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  amount    Int
  type      TransactionType
  walletId  String
  wallet    WalletAccount   @relation(fields: [walletId], references: [id])
}

enum TransactionType {
  IN
  OUT
}

model Institution {
  id                    Int             @id @default(autoincrement())
  name                  String
  countryCode           String?
  countryName           String?
  bankCode              String?
  primaryColor          String?
  logo                  String?
  createdAt             DateTime?
  updatedAt             DateTime?
  channels              String?
  isOcrActive           Boolean?        @default(false)
  automaticVerification Boolean?        @default(false)
  pdfVerification       Boolean?        @default(false)
  passbookVerification  Boolean?        @default(false)
  institutionType       String?
  walletAccounts        WalletAccount[]
}

model Token {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  hashedToken String
  type        TokenType @default(RESET_PASSWORD)
  expiresAt   DateTime
  sentTo      String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([hashedToken, type])
}

enum Role {
  USER
  ADMIN
}

enum TokenType {
  RESET_PASSWORD
}
